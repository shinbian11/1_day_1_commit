<<튜플>>

리스트: [  ]
딕셔너리 : {   }
튜플 : (   )
----------------------------------------------------------------------------
=> 튜플은 여러가지 방법으로 만들수있다. 
1번째 방법) 
tuple1 = (1,2,3)

2번째 방법) 
tuple2 = 1,2,3

3번째 방법) 
list3 = [1,2,3]
tuple3 = tuple(list3)



=> tuple1과 tuple2와 tuple3은 모두 같습니다.

------------------------------------------------------------------------------------------
이때, 튜플은 리스트처럼 순서가 정해져있다. 즉 인덱스번호로 값을 가져올수있다.
=>즉, tuple3[0] = 1
------------------------------------------------------------------------------------------
=>튜플은 한번 만들고나면 변경할수없는, 순서가 정해진 값의 연속이다.
(튜플은 값의 변경과 삭제가 불가능)
즉, 
tuple3[0] = 5     (x)
del tuple[3]    (x)
tuple.pop(0)      (X)

다 안됨!
------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------

<<튜플을 이용한 packing,unpacking (REPL 에서)>>

1. unpacking
->

c= (3,4)
d,e = c
>> 이떄 d = 3,e = 4이다. c의 값을 unpacking해서 d와 e에 넣었다


2)packing
f = d,e
>> f는 (3,4)이다. 이때 d와 e를 f에 packing 했다.

------------------------------------------------------------------------------------------
ex)

c = (3, 4)
d, e = c     # c의 값을 언패킹하여 d, e에 값을 저장
f = d, e     # 변수 d와 e를 f에 패킹
------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------

<<x,y 두개의 값을 바꾸는 방법!!>>

1. 임시변수 temp 사용
x = 5
y = 10

temp = x
x=y
y=temp

2. 임시변수 사용 안하고 걍 튜플로 이렇게!
x,y = y,x
------------------------------------------------------------------------------------------
<<함수의 리턴값으로 여러값을 전달할수있다!!>>

def tuple_func():
	return 1,2

q,w = tuple_func()

q >>1
w>>2
------------------------------------------------------------------------------------------
------------------------------------------------------------------------------------------
<<함수의 리턴값으로 튜플을 사용하는 경우....심화>>

list = [1,2,3,4,5]
for i,v in enumerate(list):
    print('{}번째 값: {}'.format(i,v))
    
#0번째 값: 1
#1번째 값: 2
#2번째 값: 3
#3번째 값: 4
#4번째 값: 5
=> 이렇게 출력!
-----------------------------------------------------

lst = [1,2,3,4,5]
for a in enumerate(lst):
    print('{}번쨰 값: {}'.format(a[0],a[1]))

#0번째 값: 1
#1번째 값: 2
#2번째 값: 3
#3번째 값: 4
#4번째 값: 5
=> 이렇게  똑같이 출력!
-----------------------------------------------------
lst = [1,2,3,4,5]
for a in enumerate(lst):
    print('{}번쨰 값: {}'.format(*a))
    
    #*a는 튜플 a를 쪼개어서 각각 넣어라!


#0번째 값: 1
#1번째 값: 2
#2번째 값: 3
#3번째 값: 4
#4번째 값: 5
=> 위와 똑같이 출력!
-------------------------------------------------------------------------------------
lst = [1,2,3,4,5]
for a in enumerate(lst):
    print(a)

=>이거는 (0,1) (1,2) (2,3) (3,4) (4,5) 가 출력된다.

=>enumerate 복습! enumerate는 리스트의 'index번호' 와 'value(값)'을 반환한다!
즉 list의 첫번째 인덱스인 1이 맨처음 a에 들어가면, index번호인 0 과 value 인 1이 맨처음 a에 담긴다!
즉 튜플형식으로 (0,1)이 맨처음 출력되는것이다! 그 다음도 순서대로~~~
-------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------
<<딕셔너리에서의 튜플>>
=>두가지방법 모두 가능!


ages = {'Tod' : 35, 'Jane' : 23, 'Paul' : 62}

1. for a in ages.items():
    print('{}의 나이는:{}'.format(a[0], a[1]))

#(*물론 딕셔너리에서도 역시 *a 가 가능하다! )
2. for a in ages.items():
    print('{}의 나이는:{}'.format(*a))   


#tod의 나이는 35세이다.
#jane의 나이는 23세이다.
#paul의 나이는 65세이다.
->  # 두 출력 결과가 같습니다.