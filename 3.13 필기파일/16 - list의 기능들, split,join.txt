<<list가 가진 다양한 기능>>

list.index( value ) : 값을 이용하여 위치를 찾는 기능
list.extend( [value1, value2] ) : 리스트 뒤에 값을 추가
list.insert( index, value ) : 원하는 위치에 값을 추가
list.sort( ) : 값을 순서대로 정렬 (작은 것부터 순서대로)
list.reverse( ) : 값을 역순으로 정렬
------------------------------------------------------------------------------------
주의점>
1.

list1=[1,2,3,4,5]
list1.insert(-1,9999)하면
list1 = [1,2,3,4,5,9999] 되는게 아니라
list1 = [1,2,3,4,9999,5]가 된다!
해당하는 인덱스에 그 수를 넣고 원래 있었던 수는 오른쪽으로 밀어버리는것!
뒤에서 첫번쨰 인덱스에 9999를 넣고 원래 그자리에 있었던 5는 오른쪽으로 밀기!

2.
또한, list1.insert(10000,555)처럼 인덱스를 엄청 크게 한 경우에는
정말로 10000번쨰에 넣는게 아니라 인덱스 맨 마지막에 555를 넣음! 
만약에 list1이 10000번쨰 인덱스까지 값이 꽉 차있었으면 모를까....
이 경우에는 list1 = [1,2,3,4,9999,5,555]가 된다! 맨 뒤에 그 값을 넣음!
------------------------------------------------------------------------------------

<<list와 문자열>>

-> 리스트와 문자열은 유사하다. 또한 서로 변환이 가능하다.
---------------------------------------
문자열->리스트 : split
리스트->문자열: join
---------------------------------------

ex)


words = "Hello world는 프로그래밍을 배우기에 아주 좋은 사이트입니다."
words_list = words.split()   #split안에 아무것도 안 넣으면 빈칸을 기준으로 쪼갠다
print(words_list) 
#['Hello', 'world는', '프로그래밍을', '배우기에', '아주', '좋은', '사이트입니다.']


time_str = "10:35:37"
time_list = time_str.split(":")  #  :을 기준으로 쪼개라
print(time_list) #['10', '35', '37']

#쪼개진 것들을 다시 붙이는 법은?
time_new = ":".join(time_list)
print(time_new) #10:35:37

