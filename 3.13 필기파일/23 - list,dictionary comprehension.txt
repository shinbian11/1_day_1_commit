<<List comprehension>>

> 편하게 리스트를 만드는 법!

ex)

areas = []
for i in range(1,11):
    areas = areas+[i*i]
print(areas)  #[1, 4, 9, 16, 25, 36, 49, 64, 81, 100]

>> 위의 3줄을 한줄로 하려면?
areas2 = [i*i for i in range(1,11)]
print(areas2)	 #[1, 4, 9, 16, 25, 36, 49, 64, 81, 100] 역시 똑같이 출력된다!
--------------------------------------------------------------------------------

이렇게 쉽게 리스트를 만들수있다! 구조 파악하기
[ i*i    for i in range(1,11) ]  => 1부터 10까지 i*i하기! (> 1,4,9,16....100)
[ i*i    for i in range(1,11)    if i % 2 == 0 ]  => i가 짝수일떄만 i*i (> ,16,...100)
[ ( x, y )    for x in range(15)    for y in range(15) ]  => x도 0~14, y도 0~14 (> (0,0),(0,1)....(14,14))
--------------------------------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------------------------------
<<Dictionary comprehension>> 

>편하게 딕셔너리를 만드는 법!

ex)

students = ["태연","진우","성원"]

students_dict = {"{}번".format(number+1) : name    for number, name in enumerate(students)}
#enumerate로 number와 name을 가져와서, number+1 : name 형태로 출력해라!
print(students_dict)  #{'1번': '태연', '2번': '진우', '3번': '성원'}
--------------------------------------------------------------------------------------------------------------
<< zip>>

=>리스트나 문자열이 여러개가 있을때 사용!

ex)
scores = [85,92,78,90,100]
students = ['태연','진우','정현','하늘','성진']

score_dic = {student : score  for student,score in zip(students,scores)}
#students라는 리스트와 scores라는 리스트에서 값을 하나씩 꺼내 각각 student와 score에 던져준다! 그 다음 student : score 형식으로 출력!
print(score_dic) #{'태연': 85, '진우': 92, '정현': 78, '하늘': 90, '성진': 100}

